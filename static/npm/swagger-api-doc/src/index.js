/*
 * Nginx Proxy Manager API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.12.3
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.67
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from './ApiClient';
import AccesslistsListIDBody from './model/AccesslistsListIDBody';
import CertIDUploadBody from './model/CertIDUploadBody';
import CertificatesValidateBody from './model/CertificatesValidateBody';
import DeadhostsHostIDBody from './model/DeadhostsHostIDBody';
import InlineResponse200 from './model/InlineResponse200';
import InlineResponse2001 from './model/InlineResponse2001';
import InlineResponse2002 from './model/InlineResponse2002';
import InlineResponse2003 from './model/InlineResponse2003';
import InlineResponse2004 from './model/InlineResponse2004';
import InlineResponse2005 from './model/InlineResponse2005';
import InlineResponse2006 from './model/InlineResponse2006';
import InlineResponse2007 from './model/InlineResponse2007';
import InlineResponse2008 from './model/InlineResponse2008';
import InlineResponse201 from './model/InlineResponse201';
import InlineResponse2011 from './model/InlineResponse2011';
import InlineResponse2012 from './model/InlineResponse2012';
import InlineResponse2013 from './model/InlineResponse2013';
import InlineResponse2014 from './model/InlineResponse2014';
import InlineResponse2015 from './model/InlineResponse2015';
import InlineResponse400 from './model/InlineResponse400';
import NginxAccesslistsBody from './model/NginxAccesslistsBody';
import NginxCertificatesBody from './model/NginxCertificatesBody';
import NginxDeadhostsBody from './model/NginxDeadhostsBody';
import NginxProxyhostsBody from './model/NginxProxyhostsBody';
import NginxRedirectionhostsBody from './model/NginxRedirectionhostsBody';
import NginxStreamsBody from './model/NginxStreamsBody';
import NginxcertificatesMeta from './model/NginxcertificatesMeta';
import ProxyhostsHostIDBody from './model/ProxyhostsHostIDBody';
import RedirectionhostsHostIDBody from './model/RedirectionhostsHostIDBody';
import SettingsSettingIDBody from './model/SettingsSettingIDBody';
import SettingssettingIDMeta from './model/SettingssettingIDMeta';
import StreamsStreamIDBody from './model/StreamsStreamIDBody';
import TokensBody from './model/TokensBody';
import UserIDAuthBody from './model/UserIDAuthBody';
import UserIDPermissionsBody from './model/UserIDPermissionsBody';
import UsersBody from './model/UsersBody';
import UsersUserIDBody from './model/UsersUserIDBody';
import AccessListsApi from './api/AccessListsApi';
import AuditLogApi from './api/AuditLogApi';
import CertificatesApi from './api/CertificatesApi';
import Class404HostsApi from './api/Class404HostsApi';
import ProxyHostsApi from './api/ProxyHostsApi';
import PublicApi from './api/PublicApi';
import RedirectionHostsApi from './api/RedirectionHostsApi';
import ReportsApi from './api/ReportsApi';
import SettingsApi from './api/SettingsApi';
import StreamsApi from './api/StreamsApi';
import TokensApi from './api/TokensApi';
import UsersApi from './api/UsersApi';

/**
* Object.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NginxProxyManagerApi = require('index'); // See note below*.
* var xxxSvc = new NginxProxyManagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NginxProxyManagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NginxProxyManagerApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NginxProxyManagerApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.12.3
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccesslistsListIDBody model constructor.
     * @property {module:model/AccesslistsListIDBody}
     */
    AccesslistsListIDBody,

    /**
     * The CertIDUploadBody model constructor.
     * @property {module:model/CertIDUploadBody}
     */
    CertIDUploadBody,

    /**
     * The CertificatesValidateBody model constructor.
     * @property {module:model/CertificatesValidateBody}
     */
    CertificatesValidateBody,

    /**
     * The DeadhostsHostIDBody model constructor.
     * @property {module:model/DeadhostsHostIDBody}
     */
    DeadhostsHostIDBody,

    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200,

    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001,

    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002,

    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003,

    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004,

    /**
     * The InlineResponse2005 model constructor.
     * @property {module:model/InlineResponse2005}
     */
    InlineResponse2005,

    /**
     * The InlineResponse2006 model constructor.
     * @property {module:model/InlineResponse2006}
     */
    InlineResponse2006,

    /**
     * The InlineResponse2007 model constructor.
     * @property {module:model/InlineResponse2007}
     */
    InlineResponse2007,

    /**
     * The InlineResponse2008 model constructor.
     * @property {module:model/InlineResponse2008}
     */
    InlineResponse2008,

    /**
     * The InlineResponse201 model constructor.
     * @property {module:model/InlineResponse201}
     */
    InlineResponse201,

    /**
     * The InlineResponse2011 model constructor.
     * @property {module:model/InlineResponse2011}
     */
    InlineResponse2011,

    /**
     * The InlineResponse2012 model constructor.
     * @property {module:model/InlineResponse2012}
     */
    InlineResponse2012,

    /**
     * The InlineResponse2013 model constructor.
     * @property {module:model/InlineResponse2013}
     */
    InlineResponse2013,

    /**
     * The InlineResponse2014 model constructor.
     * @property {module:model/InlineResponse2014}
     */
    InlineResponse2014,

    /**
     * The InlineResponse2015 model constructor.
     * @property {module:model/InlineResponse2015}
     */
    InlineResponse2015,

    /**
     * The InlineResponse400 model constructor.
     * @property {module:model/InlineResponse400}
     */
    InlineResponse400,

    /**
     * The NginxAccesslistsBody model constructor.
     * @property {module:model/NginxAccesslistsBody}
     */
    NginxAccesslistsBody,

    /**
     * The NginxCertificatesBody model constructor.
     * @property {module:model/NginxCertificatesBody}
     */
    NginxCertificatesBody,

    /**
     * The NginxDeadhostsBody model constructor.
     * @property {module:model/NginxDeadhostsBody}
     */
    NginxDeadhostsBody,

    /**
     * The NginxProxyhostsBody model constructor.
     * @property {module:model/NginxProxyhostsBody}
     */
    NginxProxyhostsBody,

    /**
     * The NginxRedirectionhostsBody model constructor.
     * @property {module:model/NginxRedirectionhostsBody}
     */
    NginxRedirectionhostsBody,

    /**
     * The NginxStreamsBody model constructor.
     * @property {module:model/NginxStreamsBody}
     */
    NginxStreamsBody,

    /**
     * The NginxcertificatesMeta model constructor.
     * @property {module:model/NginxcertificatesMeta}
     */
    NginxcertificatesMeta,

    /**
     * The ProxyhostsHostIDBody model constructor.
     * @property {module:model/ProxyhostsHostIDBody}
     */
    ProxyhostsHostIDBody,

    /**
     * The RedirectionhostsHostIDBody model constructor.
     * @property {module:model/RedirectionhostsHostIDBody}
     */
    RedirectionhostsHostIDBody,

    /**
     * The SettingsSettingIDBody model constructor.
     * @property {module:model/SettingsSettingIDBody}
     */
    SettingsSettingIDBody,

    /**
     * The SettingssettingIDMeta model constructor.
     * @property {module:model/SettingssettingIDMeta}
     */
    SettingssettingIDMeta,

    /**
     * The StreamsStreamIDBody model constructor.
     * @property {module:model/StreamsStreamIDBody}
     */
    StreamsStreamIDBody,

    /**
     * The TokensBody model constructor.
     * @property {module:model/TokensBody}
     */
    TokensBody,

    /**
     * The UserIDAuthBody model constructor.
     * @property {module:model/UserIDAuthBody}
     */
    UserIDAuthBody,

    /**
     * The UserIDPermissionsBody model constructor.
     * @property {module:model/UserIDPermissionsBody}
     */
    UserIDPermissionsBody,

    /**
     * The UsersBody model constructor.
     * @property {module:model/UsersBody}
     */
    UsersBody,

    /**
     * The UsersUserIDBody model constructor.
     * @property {module:model/UsersUserIDBody}
     */
    UsersUserIDBody,

    /**
    * The AccessListsApi service constructor.
    * @property {module:api/AccessListsApi}
    */
    AccessListsApi,

    /**
    * The AuditLogApi service constructor.
    * @property {module:api/AuditLogApi}
    */
    AuditLogApi,

    /**
    * The CertificatesApi service constructor.
    * @property {module:api/CertificatesApi}
    */
    CertificatesApi,

    /**
    * The Class404HostsApi service constructor.
    * @property {module:api/Class404HostsApi}
    */
    Class404HostsApi,

    /**
    * The ProxyHostsApi service constructor.
    * @property {module:api/ProxyHostsApi}
    */
    ProxyHostsApi,

    /**
    * The PublicApi service constructor.
    * @property {module:api/PublicApi}
    */
    PublicApi,

    /**
    * The RedirectionHostsApi service constructor.
    * @property {module:api/RedirectionHostsApi}
    */
    RedirectionHostsApi,

    /**
    * The ReportsApi service constructor.
    * @property {module:api/ReportsApi}
    */
    ReportsApi,

    /**
    * The SettingsApi service constructor.
    * @property {module:api/SettingsApi}
    */
    SettingsApi,

    /**
    * The StreamsApi service constructor.
    * @property {module:api/StreamsApi}
    */
    StreamsApi,

    /**
    * The TokensApi service constructor.
    * @property {module:api/TokensApi}
    */
    TokensApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
